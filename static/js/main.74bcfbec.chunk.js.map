{"version":3,"sources":["components/title.js","components/editor.js","components/previewer.js","App.js","index.js"],"names":["Title","title","className","Editor","handleMarkdown","markdown","id","defaultValue","onChange","Previewer","text","marked","setOptions","breaks","gfm","pedantic","smartLists","smartypants","xhtml","renderedText","__html","DOMPurify","sanitize","dangerouslySetInnerHTML","App","useState","setMarkdown","e","target","value","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sMAMeA,EAJD,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACf,OAAO,4BAAQC,UAAU,mBAAmBD,ICc/BE,EAdA,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,eAAgBC,EAAe,EAAfA,SAChC,OACE,6BAASH,UAAU,+BACjB,kBAAC,EAAD,CAAOD,MAAM,WACb,8BACEK,GAAG,SACHJ,UAAU,gDACVK,aAAcF,EACdG,SAAUJ,M,gCCoBHK,EA1BG,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACnBC,IAAOC,WAAW,CAChBC,QAAQ,EACRC,KAAK,EACLC,UAAU,EACVC,YAAY,EACZC,aAAa,EACbC,OAAO,IAGT,IAAMC,EAAe,CACnBC,OAAQC,IAAUC,SAASX,IAAOD,KAGpC,OACE,6BAASR,UAAU,kCACjB,kBAAC,EAAD,CAAOD,MAAM,YACb,6BACEK,GAAG,UACHJ,UAAU,mDACVqB,wBAAyBJ,MCwDlBK,EA7EH,WACV,IADgB,EA+DgBC,mBA9DX,2qCADL,mBA+DTpB,EA/DS,KA+DCqB,EA/DD,KAqEhB,OACE,0BAAMxB,UAAU,OACd,kBAAC,EAAD,CAAQE,eANW,SAACuB,GACtBD,EAAYC,EAAEC,OAAOC,QAKqBxB,SAAUA,IAClD,kBAAC,EAAD,CAAWK,KAAML,M,MCvEvByB,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.74bcfbec.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Title = ({ title }) => {\r\n  return <header className='container-title'>{title}</header>;\r\n};\r\n\r\nexport default Title;\r\n","import React from 'react';\r\nimport Title from './title';\r\n\r\nconst Editor = ({ handleMarkdown, markdown }) => {\r\n  return (\r\n    <section className='container container__editor'>\r\n      <Title title='editor' />\r\n      <textarea\r\n        id='editor'\r\n        className='container__content container__editor--content'\r\n        defaultValue={markdown}\r\n        onChange={handleMarkdown}\r\n      />\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Editor;\r\n","import React from 'react';\r\nimport marked from 'marked';\r\nimport DOMPurify from 'dompurify';\r\nimport Title from './title';\r\n\r\nconst Previewer = ({ text }) => {\r\n  marked.setOptions({\r\n    breaks: true,\r\n    gfm: true,\r\n    pedantic: false,\r\n    smartLists: true,\r\n    smartypants: false,\r\n    xhtml: true,\r\n  });\r\n\r\n  const renderedText = {\r\n    __html: DOMPurify.sanitize(marked(text)),\r\n  };\r\n\r\n  return (\r\n    <section className='container container__previewer'>\r\n      <Title title='preview' />\r\n      <article\r\n        id='preview'\r\n        className='container__content container__previewer--content'\r\n        dangerouslySetInnerHTML={renderedText}\r\n      />\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Previewer;\r\n","import React, { useState } from 'react';\nimport Editor from './components/editor';\nimport Previewer from './components/previewer';\n\nconst App = () => {\n  const initialMarkdown = `\n# Welcome!\n\n## Heading 2\n\n### Heading 3\n\n#### Heading 4\n\n##### Heading 5\n\n###### Heading 6\n\n---\n  \nHeres some code, \\`<div></div>\\`, between 2 backticks.\n\n\\`\\`\\`\n// this is multi-line code:\n\nfunction anotherExample(firstLine, lastLine) {\n  if (firstLine == '\\`\\`\\`' && lastLine == '\\`\\`\\`') {\n    return multiLineCode;\n  }\n}\n\\`\\`\\`\n  \nYou can also make text **bold**... whoa!\n\nOr _italic_.\n\nOr... wait for it... **_both!_**\n\nAnd feel free to go crazy ~~crossing stuff out~~.\n\n---\n\nThere's also [links](https://www.freecodecamp.com), and\n> Block Quotes!\n\nAnd if you want to get really crazy, even tables:\n\nWild Header | Crazy Header | Another Header?\n------------ | ------------- | ------------- \nYour content can | be here, and it | can be here....\nAnd here. | Okay. | I think we get it.\n\n- And of course there are lists.\n- Some are bulleted.\n- With different indentation levels.\n- That look like this.\n\n\n1. And there are numbererd lists too.\n1. Use just 1s if you want! \n1. But the list goes on...\n- Even if you use dashes or asterisks.\n* And last but not least, let's not forget embedded images:\n\n![React Logo w/ Text](https://goo.gl/Umyytc)\n`;\n\n  const [markdown, setMarkdown] = useState(initialMarkdown);\n\n  const handleMarkdown = (e) => {\n    setMarkdown(e.target.value);\n  };\n\n  return (\n    <main className='app'>\n      <Editor handleMarkdown={handleMarkdown} markdown={markdown} />\n      <Previewer text={markdown} />\n    </main>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './styles/base.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}